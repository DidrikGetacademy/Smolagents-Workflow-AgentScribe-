[2025-06-19 16:42:03][MainThread] segment appended: Segment(id=1, seek=0, start=np.float64(0.76), end=np.float64(3.36), text=' not only our health, but so many', tokens=[50365, 406, 787, 527, 1585, 11, 457, 370, 867, 50533], avg_logprob=-0.13565341180021112, compression_ratio=0.8, no_speech_prob=0.0, words=[Word(start=np.float64(0.76), end=np.float64(1.34), word=' not', probability=np.float64(0.8330078125)), Word(start=np.float64(1.34), end=np.float64(1.58), word=' only', probability=np.float64(1.0)), Word(start=np.float64(1.58), end=np.float64(1.78), word=' our', probability=np.float64(0.99755859375)), Word(start=np.float64(1.78), end=np.float64(2.18), word=' health,', probability=np.float64(1.0)), Word(start=np.float64(2.3), end=np.float64(2.64), word=' but', probability=np.float64(1.0)), Word(start=np.float64(2.64), end=np.float64(3.18), word=' so', probability=np.float64(0.998046875)), Word(start=np.float64(3.18), end=np.float64(3.36), word=' many', probability=np.float64(0.998046875))], temperature=0.0)
[2025-06-19 16:42:03][MainThread] [SpeechToTextTool_verify]segment dict: {'start': np.float64(0.76), 'end': np.float64(3.36), 'text': 'not only our health, but so many', 'words': [{'word': ' not', 'start': np.float64(0.76), 'end': np.float64(1.34)}, {'word': ' only', 'start': np.float64(1.34), 'end': np.float64(1.58)}, {'word': ' our', 'start': np.float64(1.58), 'end': np.float64(1.78)}, {'word': ' health,', 'start': np.float64(1.78), 'end': np.float64(2.18)}, {'word': ' but', 'start': np.float64(2.3), 'end': np.float64(2.64)}, {'word': ' so', 'start': np.float64(2.64), 'end': np.float64(3.18)}, {'word': ' many', 'start': np.float64(3.18), 'end': np.float64(3.36)}]}
[2025-06-19 16:46:17][MainThread] segment appended: Segment(id=1, seek=0, start=np.float64(0.76), end=np.float64(3.36), text=' not only our health, but so many', tokens=[50365, 406, 787, 527, 1585, 11, 457, 370, 867, 50533], avg_logprob=-0.13565341180021112, compression_ratio=0.8, no_speech_prob=0.0, words=[Word(start=np.float64(0.76), end=np.float64(1.34), word=' not', probability=np.float64(0.8330078125)), Word(start=np.float64(1.34), end=np.float64(1.58), word=' only', probability=np.float64(1.0)), Word(start=np.float64(1.58), end=np.float64(1.78), word=' our', probability=np.float64(0.99755859375)), Word(start=np.float64(1.78), end=np.float64(2.18), word=' health,', probability=np.float64(1.0)), Word(start=np.float64(2.3), end=np.float64(2.64), word=' but', probability=np.float64(1.0)), Word(start=np.float64(2.64), end=np.float64(3.18), word=' so', probability=np.float64(0.998046875)), Word(start=np.float64(3.18), end=np.float64(3.36), word=' many', probability=np.float64(0.998046875))], temperature=0.0)
[2025-06-19 16:46:17][MainThread] [SpeechToTextTool_verify]segment dict: {'start': np.float64(0.76), 'end': np.float64(3.36), 'text': 'not only our health, but so many', 'words': [{'word': ' not', 'start': np.float64(0.76), 'end': np.float64(1.34)}, {'word': ' only', 'start': np.float64(1.34), 'end': np.float64(1.58)}, {'word': ' our', 'start': np.float64(1.58), 'end': np.float64(1.78)}, {'word': ' health,', 'start': np.float64(1.78), 'end': np.float64(2.18)}, {'word': ' but', 'start': np.float64(2.3), 'end': np.float64(2.64)}, {'word': ' so', 'start': np.float64(2.64), 'end': np.float64(3.18)}, {'word': ' many', 'start': np.float64(3.18), 'end': np.float64(3.36)}]}
[2025-06-19 16:54:28][MainThread] segment appended: Segment(id=1, seek=0, start=np.float64(0.76), end=np.float64(3.36), text=' not only our health, but so many', tokens=[50365, 406, 787, 527, 1585, 11, 457, 370, 867, 50533], avg_logprob=-0.13565341180021112, compression_ratio=0.8, no_speech_prob=0.0, words=[Word(start=np.float64(0.76), end=np.float64(1.34), word=' not', probability=np.float64(0.8330078125)), Word(start=np.float64(1.34), end=np.float64(1.58), word=' only', probability=np.float64(1.0)), Word(start=np.float64(1.58), end=np.float64(1.78), word=' our', probability=np.float64(0.99755859375)), Word(start=np.float64(1.78), end=np.float64(2.18), word=' health,', probability=np.float64(1.0)), Word(start=np.float64(2.3), end=np.float64(2.64), word=' but', probability=np.float64(1.0)), Word(start=np.float64(2.64), end=np.float64(3.18), word=' so', probability=np.float64(0.998046875)), Word(start=np.float64(3.18), end=np.float64(3.36), word=' many', probability=np.float64(0.998046875))], temperature=0.0)
[2025-06-19 16:54:28][MainThread] [SpeechToTextTool_verify]segment dict: {'start': np.float64(0.76), 'end': np.float64(3.36), 'text': 'not only our health, but so many', 'words': [{'word': ' not', 'start': np.float64(0.76), 'end': np.float64(1.34)}, {'word': ' only', 'start': np.float64(1.34), 'end': np.float64(1.58)}, {'word': ' our', 'start': np.float64(1.58), 'end': np.float64(1.78)}, {'word': ' health,', 'start': np.float64(1.78), 'end': np.float64(2.18)}, {'word': ' but', 'start': np.float64(2.3), 'end': np.float64(2.64)}, {'word': ' so', 'start': np.float64(2.64), 'end': np.float64(3.18)}, {'word': ' many', 'start': np.float64(3.18), 'end': np.float64(3.36)}]}
[2025-06-19 16:56:32][MainThread] segment appended: Segment(id=1, seek=0, start=np.float64(0.76), end=np.float64(3.36), text=' not only our health, but so many', tokens=[50365, 406, 787, 527, 1585, 11, 457, 370, 867, 50533], avg_logprob=-0.13565341180021112, compression_ratio=0.8, no_speech_prob=0.0, words=[Word(start=np.float64(0.76), end=np.float64(1.34), word=' not', probability=np.float64(0.8330078125)), Word(start=np.float64(1.34), end=np.float64(1.58), word=' only', probability=np.float64(1.0)), Word(start=np.float64(1.58), end=np.float64(1.78), word=' our', probability=np.float64(0.99755859375)), Word(start=np.float64(1.78), end=np.float64(2.18), word=' health,', probability=np.float64(1.0)), Word(start=np.float64(2.3), end=np.float64(2.64), word=' but', probability=np.float64(1.0)), Word(start=np.float64(2.64), end=np.float64(3.18), word=' so', probability=np.float64(0.998046875)), Word(start=np.float64(3.18), end=np.float64(3.36), word=' many', probability=np.float64(0.998046875))], temperature=0.0)
[2025-06-19 16:56:32][MainThread] [SpeechToTextTool_verify]segment dict: {'start': np.float64(0.76), 'end': np.float64(3.36), 'text': 'not only our health, but so many', 'words': [{'word': ' not', 'start': np.float64(0.76), 'end': np.float64(1.34)}, {'word': ' only', 'start': np.float64(1.34), 'end': np.float64(1.58)}, {'word': ' our', 'start': np.float64(1.58), 'end': np.float64(1.78)}, {'word': ' health,', 'start': np.float64(1.78), 'end': np.float64(2.18)}, {'word': ' but', 'start': np.float64(2.3), 'end': np.float64(2.64)}, {'word': ' so', 'start': np.float64(2.64), 'end': np.float64(3.18)}, {'word': ' many', 'start': np.float64(3.18), 'end': np.float64(3.36)}]}
[2025-06-19 17:04:44][MainThread] segment appended: Segment(id=1, seek=0, start=np.float64(0.76), end=np.float64(3.36), text=' not only our health, but so many', tokens=[50365, 406, 787, 527, 1585, 11, 457, 370, 867, 50533], avg_logprob=-0.13565341180021112, compression_ratio=0.8, no_speech_prob=0.0, words=[Word(start=np.float64(0.76), end=np.float64(1.34), word=' not', probability=np.float64(0.8330078125)), Word(start=np.float64(1.34), end=np.float64(1.58), word=' only', probability=np.float64(1.0)), Word(start=np.float64(1.58), end=np.float64(1.78), word=' our', probability=np.float64(0.99755859375)), Word(start=np.float64(1.78), end=np.float64(2.18), word=' health,', probability=np.float64(1.0)), Word(start=np.float64(2.3), end=np.float64(2.64), word=' but', probability=np.float64(1.0)), Word(start=np.float64(2.64), end=np.float64(3.18), word=' so', probability=np.float64(0.998046875)), Word(start=np.float64(3.18), end=np.float64(3.36), word=' many', probability=np.float64(0.998046875))], temperature=0.0)
[2025-06-19 17:04:44][MainThread] [SpeechToTextTool_verify]segment dict: {'start': np.float64(0.76), 'end': np.float64(3.36), 'text': 'not only our health, but so many', 'words': [{'word': ' not', 'start': np.float64(0.76), 'end': np.float64(1.34)}, {'word': ' only', 'start': np.float64(1.34), 'end': np.float64(1.58)}, {'word': ' our', 'start': np.float64(1.58), 'end': np.float64(1.78)}, {'word': ' health,', 'start': np.float64(1.78), 'end': np.float64(2.18)}, {'word': ' but', 'start': np.float64(2.3), 'end': np.float64(2.64)}, {'word': ' so', 'start': np.float64(2.64), 'end': np.float64(3.18)}, {'word': ' many', 'start': np.float64(3.18), 'end': np.float64(3.36)}]}
[2025-06-19 17:08:46][MainThread] segment appended: Segment(id=1, seek=0, start=np.float64(0.76), end=np.float64(3.36), text=' not only our health, but so many', tokens=[50365, 406, 787, 527, 1585, 11, 457, 370, 867, 50533], avg_logprob=-0.13565341180021112, compression_ratio=0.8, no_speech_prob=0.0, words=[Word(start=np.float64(0.76), end=np.float64(1.34), word=' not', probability=np.float64(0.8330078125)), Word(start=np.float64(1.34), end=np.float64(1.58), word=' only', probability=np.float64(1.0)), Word(start=np.float64(1.58), end=np.float64(1.78), word=' our', probability=np.float64(0.99755859375)), Word(start=np.float64(1.78), end=np.float64(2.18), word=' health,', probability=np.float64(1.0)), Word(start=np.float64(2.3), end=np.float64(2.64), word=' but', probability=np.float64(1.0)), Word(start=np.float64(2.64), end=np.float64(3.18), word=' so', probability=np.float64(0.998046875)), Word(start=np.float64(3.18), end=np.float64(3.36), word=' many', probability=np.float64(0.998046875))], temperature=0.0)
[2025-06-19 17:08:46][MainThread] [SpeechToTextTool_verify]segment dict: {'start': np.float64(0.76), 'end': np.float64(3.36), 'text': 'not only our health, but so many', 'words': [{'word': ' not', 'start': np.float64(0.76), 'end': np.float64(1.34)}, {'word': ' only', 'start': np.float64(1.34), 'end': np.float64(1.58)}, {'word': ' our', 'start': np.float64(1.58), 'end': np.float64(1.78)}, {'word': ' health,', 'start': np.float64(1.78), 'end': np.float64(2.18)}, {'word': ' but', 'start': np.float64(2.3), 'end': np.float64(2.64)}, {'word': ' so', 'start': np.float64(2.64), 'end': np.float64(3.18)}, {'word': ' many', 'start': np.float64(3.18), 'end': np.float64(3.36)}]}
[2025-06-19 17:10:55][MainThread] segment appended: Segment(id=1, seek=0, start=np.float64(0.76), end=np.float64(3.36), text=' not only our health, but so many', tokens=[50365, 406, 787, 527, 1585, 11, 457, 370, 867, 50533], avg_logprob=-0.13565341180021112, compression_ratio=0.8, no_speech_prob=0.0, words=[Word(start=np.float64(0.76), end=np.float64(1.34), word=' not', probability=np.float64(0.8330078125)), Word(start=np.float64(1.34), end=np.float64(1.58), word=' only', probability=np.float64(1.0)), Word(start=np.float64(1.58), end=np.float64(1.78), word=' our', probability=np.float64(0.99755859375)), Word(start=np.float64(1.78), end=np.float64(2.18), word=' health,', probability=np.float64(1.0)), Word(start=np.float64(2.3), end=np.float64(2.64), word=' but', probability=np.float64(1.0)), Word(start=np.float64(2.64), end=np.float64(3.18), word=' so', probability=np.float64(0.998046875)), Word(start=np.float64(3.18), end=np.float64(3.36), word=' many', probability=np.float64(0.998046875))], temperature=0.0)
[2025-06-19 17:10:55][MainThread] [SpeechToTextTool_verify]segment dict: {'start': np.float64(0.76), 'end': np.float64(3.36), 'text': 'not only our health, but so many', 'words': [{'word': ' not', 'start': np.float64(0.76), 'end': np.float64(1.34)}, {'word': ' only', 'start': np.float64(1.34), 'end': np.float64(1.58)}, {'word': ' our', 'start': np.float64(1.58), 'end': np.float64(1.78)}, {'word': ' health,', 'start': np.float64(1.78), 'end': np.float64(2.18)}, {'word': ' but', 'start': np.float64(2.3), 'end': np.float64(2.64)}, {'word': ' so', 'start': np.float64(2.64), 'end': np.float64(3.18)}, {'word': ' many', 'start': np.float64(3.18), 'end': np.float64(3.36)}]}
[2025-06-19 17:12:31][MainThread] segment appended: Segment(id=1, seek=0, start=np.float64(0.76), end=np.float64(3.36), text=' not only our health, but so many', tokens=[50365, 406, 787, 527, 1585, 11, 457, 370, 867, 50533], avg_logprob=-0.13565341180021112, compression_ratio=0.8, no_speech_prob=0.0, words=[Word(start=np.float64(0.76), end=np.float64(1.34), word=' not', probability=np.float64(0.8330078125)), Word(start=np.float64(1.34), end=np.float64(1.58), word=' only', probability=np.float64(1.0)), Word(start=np.float64(1.58), end=np.float64(1.78), word=' our', probability=np.float64(0.99755859375)), Word(start=np.float64(1.78), end=np.float64(2.18), word=' health,', probability=np.float64(1.0)), Word(start=np.float64(2.3), end=np.float64(2.64), word=' but', probability=np.float64(1.0)), Word(start=np.float64(2.64), end=np.float64(3.18), word=' so', probability=np.float64(0.998046875)), Word(start=np.float64(3.18), end=np.float64(3.36), word=' many', probability=np.float64(0.998046875))], temperature=0.0)
[2025-06-19 17:12:31][MainThread] [SpeechToTextTool_verify]segment dict: {'start': np.float64(0.76), 'end': np.float64(3.36), 'text': 'not only our health, but so many', 'words': [{'word': ' not', 'start': np.float64(0.76), 'end': np.float64(1.34)}, {'word': ' only', 'start': np.float64(1.34), 'end': np.float64(1.58)}, {'word': ' our', 'start': np.float64(1.58), 'end': np.float64(1.78)}, {'word': ' health,', 'start': np.float64(1.78), 'end': np.float64(2.18)}, {'word': ' but', 'start': np.float64(2.3), 'end': np.float64(2.64)}, {'word': ' so', 'start': np.float64(2.64), 'end': np.float64(3.18)}, {'word': ' many', 'start': np.float64(3.18), 'end': np.float64(3.36)}]}
[2025-06-19 17:15:34][MainThread] segment appended: Segment(id=1, seek=0, start=np.float64(0.76), end=np.float64(3.36), text=' not only our health, but so many', tokens=[50365, 406, 787, 527, 1585, 11, 457, 370, 867, 50533], avg_logprob=-0.13565341180021112, compression_ratio=0.8, no_speech_prob=0.0, words=[Word(start=np.float64(0.76), end=np.float64(1.34), word=' not', probability=np.float64(0.8330078125)), Word(start=np.float64(1.34), end=np.float64(1.58), word=' only', probability=np.float64(1.0)), Word(start=np.float64(1.58), end=np.float64(1.78), word=' our', probability=np.float64(0.99755859375)), Word(start=np.float64(1.78), end=np.float64(2.18), word=' health,', probability=np.float64(1.0)), Word(start=np.float64(2.3), end=np.float64(2.64), word=' but', probability=np.float64(1.0)), Word(start=np.float64(2.64), end=np.float64(3.18), word=' so', probability=np.float64(0.998046875)), Word(start=np.float64(3.18), end=np.float64(3.36), word=' many', probability=np.float64(0.998046875))], temperature=0.0)
[2025-06-19 17:15:34][MainThread] [SpeechToTextTool_verify]segment dict: {'start': np.float64(0.76), 'end': np.float64(3.36), 'text': 'not only our health, but so many', 'words': [{'word': ' not', 'start': np.float64(0.76), 'end': np.float64(1.34)}, {'word': ' only', 'start': np.float64(1.34), 'end': np.float64(1.58)}, {'word': ' our', 'start': np.float64(1.58), 'end': np.float64(1.78)}, {'word': ' health,', 'start': np.float64(1.78), 'end': np.float64(2.18)}, {'word': ' but', 'start': np.float64(2.3), 'end': np.float64(2.64)}, {'word': ' so', 'start': np.float64(2.64), 'end': np.float64(3.18)}, {'word': ' many', 'start': np.float64(3.18), 'end': np.float64(3.36)}]}
[2025-06-19 17:18:24][MainThread] segment appended: Segment(id=1, seek=0, start=np.float64(0.76), end=np.float64(3.36), text=' not only our health, but so many', tokens=[50365, 406, 787, 527, 1585, 11, 457, 370, 867, 50533], avg_logprob=-0.13565341180021112, compression_ratio=0.8, no_speech_prob=0.0, words=[Word(start=np.float64(0.76), end=np.float64(1.34), word=' not', probability=np.float64(0.8330078125)), Word(start=np.float64(1.34), end=np.float64(1.58), word=' only', probability=np.float64(1.0)), Word(start=np.float64(1.58), end=np.float64(1.78), word=' our', probability=np.float64(0.99755859375)), Word(start=np.float64(1.78), end=np.float64(2.18), word=' health,', probability=np.float64(1.0)), Word(start=np.float64(2.3), end=np.float64(2.64), word=' but', probability=np.float64(1.0)), Word(start=np.float64(2.64), end=np.float64(3.18), word=' so', probability=np.float64(0.998046875)), Word(start=np.float64(3.18), end=np.float64(3.36), word=' many', probability=np.float64(0.998046875))], temperature=0.0)
[2025-06-19 17:18:24][MainThread] [SpeechToTextTool_verify]segment dict: {'start': np.float64(0.76), 'end': np.float64(3.36), 'text': 'not only our health, but so many', 'words': [{'word': ' not', 'start': np.float64(0.76), 'end': np.float64(1.34)}, {'word': ' only', 'start': np.float64(1.34), 'end': np.float64(1.58)}, {'word': ' our', 'start': np.float64(1.58), 'end': np.float64(1.78)}, {'word': ' health,', 'start': np.float64(1.78), 'end': np.float64(2.18)}, {'word': ' but', 'start': np.float64(2.3), 'end': np.float64(2.64)}, {'word': ' so', 'start': np.float64(2.64), 'end': np.float64(3.18)}, {'word': ' many', 'start': np.float64(3.18), 'end': np.float64(3.36)}]}
[2025-06-19 17:20:22][MainThread] segment appended: Segment(id=1, seek=0, start=np.float64(0.76), end=np.float64(3.36), text=' not only our health, but so many', tokens=[50365, 406, 787, 527, 1585, 11, 457, 370, 867, 50533], avg_logprob=-0.13565341180021112, compression_ratio=0.8, no_speech_prob=0.0, words=[Word(start=np.float64(0.76), end=np.float64(1.34), word=' not', probability=np.float64(0.8330078125)), Word(start=np.float64(1.34), end=np.float64(1.58), word=' only', probability=np.float64(1.0)), Word(start=np.float64(1.58), end=np.float64(1.78), word=' our', probability=np.float64(0.99755859375)), Word(start=np.float64(1.78), end=np.float64(2.18), word=' health,', probability=np.float64(1.0)), Word(start=np.float64(2.3), end=np.float64(2.64), word=' but', probability=np.float64(1.0)), Word(start=np.float64(2.64), end=np.float64(3.18), word=' so', probability=np.float64(0.998046875)), Word(start=np.float64(3.18), end=np.float64(3.36), word=' many', probability=np.float64(0.998046875))], temperature=0.0)
[2025-06-19 17:20:22][MainThread] [SpeechToTextTool_verify]segment dict: {'start': np.float64(0.76), 'end': np.float64(3.36), 'text': 'not only our health, but so many', 'words': [{'word': ' not', 'start': np.float64(0.76), 'end': np.float64(1.34)}, {'word': ' only', 'start': np.float64(1.34), 'end': np.float64(1.58)}, {'word': ' our', 'start': np.float64(1.58), 'end': np.float64(1.78)}, {'word': ' health,', 'start': np.float64(1.78), 'end': np.float64(2.18)}, {'word': ' but', 'start': np.float64(2.3), 'end': np.float64(2.64)}, {'word': ' so', 'start': np.float64(2.64), 'end': np.float64(3.18)}, {'word': ' many', 'start': np.float64(3.18), 'end': np.float64(3.36)}]}
[2025-06-19 17:25:12][MainThread] segment appended: Segment(id=1, seek=0, start=np.float64(0.76), end=np.float64(3.36), text=' not only our health, but so many', tokens=[50365, 406, 787, 527, 1585, 11, 457, 370, 867, 50533], avg_logprob=-0.13565341180021112, compression_ratio=0.8, no_speech_prob=0.0, words=[Word(start=np.float64(0.76), end=np.float64(1.34), word=' not', probability=np.float64(0.8330078125)), Word(start=np.float64(1.34), end=np.float64(1.58), word=' only', probability=np.float64(1.0)), Word(start=np.float64(1.58), end=np.float64(1.78), word=' our', probability=np.float64(0.99755859375)), Word(start=np.float64(1.78), end=np.float64(2.18), word=' health,', probability=np.float64(1.0)), Word(start=np.float64(2.3), end=np.float64(2.64), word=' but', probability=np.float64(1.0)), Word(start=np.float64(2.64), end=np.float64(3.18), word=' so', probability=np.float64(0.998046875)), Word(start=np.float64(3.18), end=np.float64(3.36), word=' many', probability=np.float64(0.998046875))], temperature=0.0)
[2025-06-19 17:25:12][MainThread] [SpeechToTextTool_verify]segment dict: {'start': np.float64(0.76), 'end': np.float64(3.36), 'text': 'not only our health, but so many', 'words': [{'word': ' not', 'start': np.float64(0.76), 'end': np.float64(1.34)}, {'word': ' only', 'start': np.float64(1.34), 'end': np.float64(1.58)}, {'word': ' our', 'start': np.float64(1.58), 'end': np.float64(1.78)}, {'word': ' health,', 'start': np.float64(1.78), 'end': np.float64(2.18)}, {'word': ' but', 'start': np.float64(2.3), 'end': np.float64(2.64)}, {'word': ' so', 'start': np.float64(2.64), 'end': np.float64(3.18)}, {'word': ' many', 'start': np.float64(3.18), 'end': np.float64(3.36)}]}
[2025-06-19 17:32:16][MainThread] segment appended: Segment(id=1, seek=0, start=np.float64(0.76), end=np.float64(3.36), text=' not only our health, but so many', tokens=[50365, 406, 787, 527, 1585, 11, 457, 370, 867, 50533], avg_logprob=-0.13565341180021112, compression_ratio=0.8, no_speech_prob=0.0, words=[Word(start=np.float64(0.76), end=np.float64(1.34), word=' not', probability=np.float64(0.8330078125)), Word(start=np.float64(1.34), end=np.float64(1.58), word=' only', probability=np.float64(1.0)), Word(start=np.float64(1.58), end=np.float64(1.78), word=' our', probability=np.float64(0.99755859375)), Word(start=np.float64(1.78), end=np.float64(2.18), word=' health,', probability=np.float64(1.0)), Word(start=np.float64(2.3), end=np.float64(2.64), word=' but', probability=np.float64(1.0)), Word(start=np.float64(2.64), end=np.float64(3.18), word=' so', probability=np.float64(0.998046875)), Word(start=np.float64(3.18), end=np.float64(3.36), word=' many', probability=np.float64(0.998046875))], temperature=0.0)
[2025-06-19 17:32:16][MainThread] [SpeechToTextTool_verify]segment dict: {'start': np.float64(0.76), 'end': np.float64(3.36), 'text': 'not only our health, but so many', 'words': [{'word': ' not', 'start': np.float64(0.76), 'end': np.float64(1.34)}, {'word': ' only', 'start': np.float64(1.34), 'end': np.float64(1.58)}, {'word': ' our', 'start': np.float64(1.58), 'end': np.float64(1.78)}, {'word': ' health,', 'start': np.float64(1.78), 'end': np.float64(2.18)}, {'word': ' but', 'start': np.float64(2.3), 'end': np.float64(2.64)}, {'word': ' so', 'start': np.float64(2.64), 'end': np.float64(3.18)}, {'word': ' many', 'start': np.float64(3.18), 'end': np.float64(3.36)}]}
[2025-06-19 17:50:26][MainThread] segment appended: Segment(id=1, seek=0, start=np.float64(0.76), end=np.float64(3.36), text=' not only our health, but so many', tokens=[50365, 406, 787, 527, 1585, 11, 457, 370, 867, 50533], avg_logprob=-0.13565341180021112, compression_ratio=0.8, no_speech_prob=0.0, words=[Word(start=np.float64(0.76), end=np.float64(1.34), word=' not', probability=np.float64(0.8330078125)), Word(start=np.float64(1.34), end=np.float64(1.58), word=' only', probability=np.float64(1.0)), Word(start=np.float64(1.58), end=np.float64(1.78), word=' our', probability=np.float64(0.99755859375)), Word(start=np.float64(1.78), end=np.float64(2.18), word=' health,', probability=np.float64(1.0)), Word(start=np.float64(2.3), end=np.float64(2.64), word=' but', probability=np.float64(1.0)), Word(start=np.float64(2.64), end=np.float64(3.18), word=' so', probability=np.float64(0.998046875)), Word(start=np.float64(3.18), end=np.float64(3.36), word=' many', probability=np.float64(0.998046875))], temperature=0.0)
[2025-06-19 17:50:26][MainThread] [SpeechToTextTool_verify]segment dict: {'start': np.float64(0.76), 'end': np.float64(3.36), 'text': 'not only our health, but so many', 'words': [{'word': ' not', 'start': np.float64(0.76), 'end': np.float64(1.34)}, {'word': ' only', 'start': np.float64(1.34), 'end': np.float64(1.58)}, {'word': ' our', 'start': np.float64(1.58), 'end': np.float64(1.78)}, {'word': ' health,', 'start': np.float64(1.78), 'end': np.float64(2.18)}, {'word': ' but', 'start': np.float64(2.3), 'end': np.float64(2.64)}, {'word': ' so', 'start': np.float64(2.64), 'end': np.float64(3.18)}, {'word': ' many', 'start': np.float64(3.18), 'end': np.float64(3.36)}]}
